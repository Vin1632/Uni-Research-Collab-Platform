{"ast":null,"code":"// Get all flagged projects for admin\nexport async function get_flagged_projects(){try{const response=await fetch(\"/admin/flagged-projects\",{method:\"GET\",headers:{\"Content-Type\":\"application/json\"}});const text=await response.text();try{const data=JSON.parse(text);if(!response.ok){throw new Error(data.message||\"Failed to fetch flagged projects\");}return data;}catch(jsonErr){console.error(\"Expected JSON but got:\",text);throw new Error(\"Server did not return valid JSON\");}}catch(error){console.error(\"Error fetching flagged projects:\",error);throw error;}}// Delete (unflag) a flagged project by flag ID\nexport async function delete_flag(flag_id){try{const response=await fetch(\"/admin/flagged-projects/\".concat(flag_id),{method:\"DELETE\",headers:{\"Content-Type\":\"application/json\"}});const text=await response.text();try{const data=JSON.parse(text);if(!response.ok){throw new Error(data.message||\"Failed to delete flag\");}return data;}catch(jsonErr){console.error(\"Expected JSON but got:\",text);throw new Error(\"Server did not return valid JSON\");}}catch(error){console.error(\"Error deleting flag:\",error);throw error;}}export async function delete_project(projectId){try{const response=await fetch(\"/admin/projects/\".concat(projectId),{method:\"DELETE\",headers:{\"Content-Type\":\"application/json\"}});if(!response.ok){const data=await response.json();throw new Error(data.message||\"Failed to delete project\");}return await response.json();}catch(error){console.error(\"Error deleting project:\",error);throw error;}}// Example API call to get full project details by ID\nexport async function get_each_project_data(projectId){const response=await fetch(\"/admin/projects/\".concat(projectId),{method:\"GET\",headers:{\"Content-Type\":\"application/json\"}});if(!response.ok){const errorData=await response.json();throw new Error(errorData.message||\"Failed to fetch project data\");}const data=await response.json();return data;}// Get all users for admin\nexport async function get_all_users(){try{const response=await fetch(\"/admin/users\",{method:\"GET\",headers:{\"Content-Type\":\"application/json\"}});const text=await response.text();try{const data=JSON.parse(text);if(!response.ok){throw new Error(data.message||\"Failed to fetch users\");}return data;}catch(jsonErr){console.error(\"Expected JSON but got:\",text);throw new Error(\"Server did not return valid JSON\");}}catch(error){console.error(\"Error fetching users:\",error);throw error;}}","map":{"version":3,"names":["get_flagged_projects","response","fetch","method","headers","text","data","JSON","parse","ok","Error","message","jsonErr","console","error","delete_flag","flag_id","concat","delete_project","projectId","json","get_each_project_data","errorData","get_all_users"],"sources":["/home/vin/Desktop/Practice/Projects/SDP PROJECT/Projects 3/Uni-Research-Collab-Platform/frontend/src/services/admin_service.js"],"sourcesContent":["// Get all flagged projects for admin\nexport async function get_flagged_projects() {\n  try {\n    const response = await fetch(\"/admin/flagged-projects\", {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    });\n\n    const text = await response.text(); \n    try {\n      const data = JSON.parse(text); \n\n      if (!response.ok) {\n        throw new Error(data.message || \"Failed to fetch flagged projects\");\n      }\n\n      return data;\n    } catch (jsonErr) {\n      console.error(\"Expected JSON but got:\", text);\n      throw new Error(\"Server did not return valid JSON\");\n    }\n  } catch (error) {\n    console.error(\"Error fetching flagged projects:\", error);\n    throw error;\n  }\n}\n\n// Delete (unflag) a flagged project by flag ID\nexport async function delete_flag(flag_id) {\n  try {\n    const response = await fetch(`/admin/flagged-projects/${flag_id}`, {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n    });\n\n    const text = await response.text();\n    try {\n      const data = JSON.parse(text);\n\n      if (!response.ok) {\n        throw new Error(data.message || \"Failed to delete flag\");\n      }\n\n      return data;\n    } catch (jsonErr) {\n      console.error(\"Expected JSON but got:\", text);\n      throw new Error(\"Server did not return valid JSON\");\n    }\n  } catch (error) {\n    console.error(\"Error deleting flag:\", error);\n    throw error;\n  }\n}\nexport async function delete_project(projectId) {\n  try {\n    const response = await fetch(`/admin/projects/${projectId}`, {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n    });\n    if (!response.ok) {\n      const data = await response.json();\n      throw new Error(data.message || \"Failed to delete project\");\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error deleting project:\", error);\n    throw error;\n  }\n}\n// Example API call to get full project details by ID\nexport async function get_each_project_data(projectId) {\n  const response = await fetch(`/admin/projects/${projectId}`, {\n    method: \"GET\",\n    headers: { \"Content-Type\": \"application/json\" },\n  });\n\n  if (!response.ok) {\n    const errorData = await response.json();\n    throw new Error(errorData.message || \"Failed to fetch project data\");\n  }\n\n  const data = await response.json();\n  return data;\n}\n// Get all users for admin\nexport async function get_all_users() {\n  try {\n    const response = await fetch(\"/admin/users\", {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    });\n\n    const text = await response.text(); \n    try {\n      const data = JSON.parse(text);\n\n      if (!response.ok) {\n        throw new Error(data.message || \"Failed to fetch users\");\n      }\n\n      return data;\n    } catch (jsonErr) {\n      console.error(\"Expected JSON but got:\", text);\n      throw new Error(\"Server did not return valid JSON\");\n    }\n  } catch (error) {\n    console.error(\"Error fetching users:\", error);\n    throw error;\n  }\n}\n"],"mappings":"AAAA;AACA,MAAO,eAAe,CAAAA,oBAAoBA,CAAA,CAAG,CAC3C,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,yBAAyB,CAAE,CACtDC,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAChD,CAAC,CAAC,CAEF,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAJ,QAAQ,CAACI,IAAI,CAAC,CAAC,CAClC,GAAI,CACF,KAAM,CAAAC,IAAI,CAAGC,IAAI,CAACC,KAAK,CAACH,IAAI,CAAC,CAE7B,GAAI,CAACJ,QAAQ,CAACQ,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAACJ,IAAI,CAACK,OAAO,EAAI,kCAAkC,CAAC,CACrE,CAEA,MAAO,CAAAL,IAAI,CACb,CAAE,MAAOM,OAAO,CAAE,CAChBC,OAAO,CAACC,KAAK,CAAC,wBAAwB,CAAET,IAAI,CAAC,CAC7C,KAAM,IAAI,CAAAK,KAAK,CAAC,kCAAkC,CAAC,CACrD,CACF,CAAE,MAAOI,KAAK,CAAE,CACdD,OAAO,CAACC,KAAK,CAAC,kCAAkC,CAAEA,KAAK,CAAC,CACxD,KAAM,CAAAA,KAAK,CACb,CACF,CAEA;AACA,MAAO,eAAe,CAAAC,WAAWA,CAACC,OAAO,CAAE,CACzC,GAAI,CACF,KAAM,CAAAf,QAAQ,CAAG,KAAM,CAAAC,KAAK,4BAAAe,MAAA,CAA4BD,OAAO,EAAI,CACjEb,MAAM,CAAE,QAAQ,CAChBC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAChD,CAAC,CAAC,CAEF,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAJ,QAAQ,CAACI,IAAI,CAAC,CAAC,CAClC,GAAI,CACF,KAAM,CAAAC,IAAI,CAAGC,IAAI,CAACC,KAAK,CAACH,IAAI,CAAC,CAE7B,GAAI,CAACJ,QAAQ,CAACQ,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAACJ,IAAI,CAACK,OAAO,EAAI,uBAAuB,CAAC,CAC1D,CAEA,MAAO,CAAAL,IAAI,CACb,CAAE,MAAOM,OAAO,CAAE,CAChBC,OAAO,CAACC,KAAK,CAAC,wBAAwB,CAAET,IAAI,CAAC,CAC7C,KAAM,IAAI,CAAAK,KAAK,CAAC,kCAAkC,CAAC,CACrD,CACF,CAAE,MAAOI,KAAK,CAAE,CACdD,OAAO,CAACC,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC5C,KAAM,CAAAA,KAAK,CACb,CACF,CACA,MAAO,eAAe,CAAAI,cAAcA,CAACC,SAAS,CAAE,CAC9C,GAAI,CACF,KAAM,CAAAlB,QAAQ,CAAG,KAAM,CAAAC,KAAK,oBAAAe,MAAA,CAAoBE,SAAS,EAAI,CAC3DhB,MAAM,CAAE,QAAQ,CAChBC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAChD,CAAC,CAAC,CACF,GAAI,CAACH,QAAQ,CAACQ,EAAE,CAAE,CAChB,KAAM,CAAAH,IAAI,CAAG,KAAM,CAAAL,QAAQ,CAACmB,IAAI,CAAC,CAAC,CAClC,KAAM,IAAI,CAAAV,KAAK,CAACJ,IAAI,CAACK,OAAO,EAAI,0BAA0B,CAAC,CAC7D,CACA,MAAO,MAAM,CAAAV,QAAQ,CAACmB,IAAI,CAAC,CAAC,CAC9B,CAAE,MAAON,KAAK,CAAE,CACdD,OAAO,CAACC,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CAC/C,KAAM,CAAAA,KAAK,CACb,CACF,CACA;AACA,MAAO,eAAe,CAAAO,qBAAqBA,CAACF,SAAS,CAAE,CACrD,KAAM,CAAAlB,QAAQ,CAAG,KAAM,CAAAC,KAAK,oBAAAe,MAAA,CAAoBE,SAAS,EAAI,CAC3DhB,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAChD,CAAC,CAAC,CAEF,GAAI,CAACH,QAAQ,CAACQ,EAAE,CAAE,CAChB,KAAM,CAAAa,SAAS,CAAG,KAAM,CAAArB,QAAQ,CAACmB,IAAI,CAAC,CAAC,CACvC,KAAM,IAAI,CAAAV,KAAK,CAACY,SAAS,CAACX,OAAO,EAAI,8BAA8B,CAAC,CACtE,CAEA,KAAM,CAAAL,IAAI,CAAG,KAAM,CAAAL,QAAQ,CAACmB,IAAI,CAAC,CAAC,CAClC,MAAO,CAAAd,IAAI,CACb,CACA;AACA,MAAO,eAAe,CAAAiB,aAAaA,CAAA,CAAG,CACpC,GAAI,CACF,KAAM,CAAAtB,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,cAAc,CAAE,CAC3CC,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAChD,CAAC,CAAC,CAEF,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAJ,QAAQ,CAACI,IAAI,CAAC,CAAC,CAClC,GAAI,CACF,KAAM,CAAAC,IAAI,CAAGC,IAAI,CAACC,KAAK,CAACH,IAAI,CAAC,CAE7B,GAAI,CAACJ,QAAQ,CAACQ,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAACJ,IAAI,CAACK,OAAO,EAAI,uBAAuB,CAAC,CAC1D,CAEA,MAAO,CAAAL,IAAI,CACb,CAAE,MAAOM,OAAO,CAAE,CAChBC,OAAO,CAACC,KAAK,CAAC,wBAAwB,CAAET,IAAI,CAAC,CAC7C,KAAM,IAAI,CAAAK,KAAK,CAAC,kCAAkC,CAAC,CACrD,CACF,CAAE,MAAOI,KAAK,CAAE,CACdD,OAAO,CAACC,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC7C,KAAM,CAAAA,KAAK,CACb,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}