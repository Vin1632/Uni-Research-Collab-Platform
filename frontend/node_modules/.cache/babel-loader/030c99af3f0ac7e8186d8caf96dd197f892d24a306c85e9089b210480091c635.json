{"ast":null,"code":"export async function get_project_data(id){try{const response=await fetch(`/milestone/projectdata/${id}`,{method:'GET',headers:{'Content-Type':'application/json'}});if(!response.ok){const errorData=await response.json();throw new Error(errorData.message||'failed to fetch projectdata');}return await response.json();}catch(error){console.error(\"Failed to fetch\",error);throw new Error(\"Failed to get the project data\");}}","map":{"version":3,"names":["get_project_data","id","response","fetch","method","headers","ok","errorData","json","Error","message","error","console"],"sources":["/home/vin/Desktop/Practice/Projects/SDP PROJECT/Projects 3/Uni-Research-Collab-Platform/frontend/src/services/milestone_tracking_service.js"],"sourcesContent":["export async function get_project_data(id) {\n    try {\n        const response = await  fetch(`/milestone/projectdata/${id}`, {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n            }\n        });\n\n        if(!response.ok)\n        {\n            const errorData = await response.json();\n            throw new Error(errorData.message || 'failed to fetch projectdata');\n        }\n\n        return await response.json();\n        \n    } catch (error) {\n        console.error(\"Failed to fetch\", error);\n        throw new Error(\"Failed to get the project data\");\n    \n    }\n}"],"mappings":"AAAA,MAAO,eAAe,CAAAA,gBAAgBA,CAACC,EAAE,CAAE,CACvC,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAO,CAAAC,KAAK,CAAC,0BAA0BF,EAAE,EAAE,CAAE,CAC1DG,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACJ,CAAC,CAAC,CAEF,GAAG,CAACH,QAAQ,CAACI,EAAE,CACf,CACI,KAAM,CAAAC,SAAS,CAAG,KAAM,CAAAL,QAAQ,CAACM,IAAI,CAAC,CAAC,CACvC,KAAM,IAAI,CAAAC,KAAK,CAACF,SAAS,CAACG,OAAO,EAAI,6BAA6B,CAAC,CACvE,CAEA,MAAO,MAAM,CAAAR,QAAQ,CAACM,IAAI,CAAC,CAAC,CAEhC,CAAE,MAAOG,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,iBAAiB,CAAEA,KAAK,CAAC,CACvC,KAAM,IAAI,CAAAF,KAAK,CAAC,gCAAgC,CAAC,CAErD,CACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}